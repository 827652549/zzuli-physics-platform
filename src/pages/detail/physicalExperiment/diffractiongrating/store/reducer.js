import * as constants from './constants';
import {fromJS} from 'immutable';
const defaultState =fromJS({
    "id": 1,
    "user_id": 0,
    "user_name": "string",
    "user_num": "string",
    "Beyond_yellow1": "59°7",
    "Beyond_yellow2": "28°49",
    "Beyond_yellow3": "239°8",
    "Beyond_yellow4": "208°50",
    "Inside_yellow1": "61°5",
    "Inside_yellow2": "22°50",
    "Inside_yellow3": "241°5",
    "Inside_yellow4": "202°51",
    "green1": "62°12",
    "green2": "21°42",
    "green3": "242°13",
    "green4": "201°43",
    "blue1": "62°18",
    "blue2": "21°38",
    "blue3": "242°19",
    "blue4": "201°39",
    "N": 20,
    "Beyond_yellow_k": 1,
    "Inside_yellow_k": 1,
    "green_k": 1,
    "blue_k": 1,
    "d": 1667.200000,
    "Beyond_yellow": "15°9",
    "Inside_yellow": "19°7",
    "green": "20°15",
    "blue": "20°20",
    "Beyond_yellow_lambda": 435.7180000,
    "Inside_yellow_lambda": 545.9960000,
    "green_lambda": 577.0460000,
    "blue_lambda": 579.3210000,
    "Beyond_yellow_D": 0.0006214,
    "Inside_yellow_D": 0.0006348,
    "green_D": 0.0006393,
    "blue_D": 0.0006397,
    "Beyond_yellow_R": 20.0000000,
    "Inside_yellow_R": 20.0000000,
    "green_R": 20.0000000,
    "blue_R": 20.0000000,
    "Beyond_yellow_delta_lambda": 21.7859000,
    "Inside_yellow_delta_lambda": 27.2998000,
    "green_delta_lambda": 28.8523000,
    "blue_delta_lambda": 28.9661000
});

export default (state=defaultState,action)=> {
    const data = action.data;
    switch (action.type) {
        case constants.CHANGE_DATAS:
            return state.merge({
                id:data.get('id'),
                user_id:data.get('user_id'),
                user_name:data.get('user_name'),
                user_num:data.get('user_num'),
                Beyond_yellow1:data.get('Beyond_yellow1'),
                Beyond_yellow2:data.get('Beyond_yellow2'),
                Beyond_yellow3:data.get('Beyond_yellow3'),
                Beyond_yellow4:data.get('Beyond_yellow4'),
                Inside_yellow1:data.get('Inside_yellow1'),
                Inside_yellow2:data.get('Inside_yellow2'),
                Inside_yellow3:data.get('Inside_yellow3'),
                Inside_yellow4:data.get('Inside_yellow4'),
                green1:data.get('green1'),
                green2:data.get('green2'),
                green3:data.get('green3'),
                green4:data.get('green4'),
                blue1:data.get('blue1'),
                blue2:data.get('blue2'),
                blue3:data.get('blue3'),
                blue4:data.get('blue4'),
                N:data.get('N'),
                Beyond_yellow_k:data.get('Beyond_yellow_k'),
                Inside_yellow_k:data.get('Inside_yellow_k'),
                green_k:data.get('green_k'),
                blue_k:data.get('blue_k'),
                d:data.get('d'),
                Beyond_yellow:data.get('Beyond_yellow'),
                Inside_yellow:data.get('Inside_yellow'),
                green:data.get('green'),
                blue:data.get('blue'),
                Beyond_yellow_lambda:data.get('Beyond_yellow_lambda'),
                Inside_yellow_lambda:data.get('Inside_yellow_lambda'),
                green_lambda:data.get('green_lambda'),
                blue_lambda:data.get('blue_lambda'),
                Beyond_yellow_D:data.get('Beyond_yellow_D'),
                Inside_yellow_D:data.get('Inside_yellow_D'),
                green_D:data.get('green_D'),
                blue_D:data.get('blue_D'),
                Beyond_yellow_R:data.get('Beyond_yellow_R'),
                Inside_yellow_R:data.get('Inside_yellow_R'),
                green_R:data.get('green_R'),
                blue_R:data.get('blue_R'),
                Beyond_yellow_delta_lambda:data.get('Beyond_yellow_delta_lambda'),
                Inside_yellow_delta_lambda:data.get('Inside_yellow_delta_lambda'),
                green_delta_lambda:data.get('green_delta_lambda'),
                blue_delta_lambda:data.get('blue_delta_lambda')
            });
            //改变每个input的store数据
        case constants.CHANGE_INPUT_VALUE:
            return state.set(action.name,action.value);
        default:
            return state;
    }
}